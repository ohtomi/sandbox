{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "Bastion Server template",
    "Parameters" : {
        "KeyName" : {
            "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the bastion server",
            "Type" : "String"
        },
        "InstanceType" : {
            "Description" : "EC2 instance type for the bastion server",
            "Default" : "t1.micro",
            "Type" : "String"
        },
        "VPC" : {
            "Description" : "VPC Id for the bastion server",
            "Type" : "String"
        },
        "ApiServerSubnet" : {
            "Description" : "Subnet Id for the bastion server",
            "Type" : "String"
        },
        "VPCDefaultSecurityGroup" : {
            "Description" : "Security Group Id for the bastion server",
            "Type" : "String"
        }
    },
    "Mappings" : {
        "RegionToAMI" : {
            "ap-northeast-1" : { "AMI" : "ami-a1bec3a0" }
        },
        "ContentToURL" : {
            "epel" : { "URL" : "http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm" }
        }
    },
    "Resources" : {
        "SSHSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "GroupDescription" : "Enable SSH access via port 22",
                "SecurityGroupIngress" : [
                    { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" }
                ]
            }
        },
        "GrowthForecastSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "GroupDescription" : "Enable Web access to GrowthForecast UI via port 5125",
                "SecurityGroupIngress" : [
                    { "IpProtocol" : "tcp", "FromPort" : "5125", "ToPort" : "5125", "CidrIp" : "0.0.0.0/0" }
                ]
            }
        },
        "Bastion" : {
            "Type" : "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "configSets" : {
                        "default" : [ "SetupRepos", "Install", "Configure", "Start" ]
                    },
                    "SetupRepos" : {
                    },
                    "Install" : {
                    },
                    "Configure" : {
                        "files" : {
                            "/etc/mongos.conf" : {
                                "content" : { "Fn::Join" : [ "", [
                                    "systemLog:\n",
                                    "    destination: \"file\"\n",
                                    "    path: \"/var/log/mongodb/mongos.log\"\n",
                                    "    logAppend: \"true\"\n",
                                    "processManagement:\n",
                                    "    fork: \"true\"\n",
                                    "    pidFilePath: \"/var/run/mongodb/mongos.pid\"\n",
                                    "net:\n",
                                    "    bindIp: \"0.0.0.0\"\n",
                                    "    port: 27017\n",
                                    "sharding:\n",
                                    "    configDB: \"configReplSet/10.104.129.111:27017,10.104.129.112:27017,10.104.129.113:27017\"\n",
                                    "\n"
                                ]]},
                                "mode" : "000644",
                                "owner" : "root",
                                "group" : "root"
                            }
                        }
                    },
                    "Start" : {
                    }
                }
            },
            "Properties" : {
                "ImageId" : { "Fn::FindInMap" : [ "RegionToAMI", { "Ref" : "AWS::Region" }, "AMI" ]},
                "InstanceType" : { "Ref" : "InstanceType" },
                "SecurityGroupIds" : [
                    { "Ref" : "VPCDefaultSecurityGroup" },
                    { "Ref" : "SSHSecurityGroup" },
                    { "Ref" : "GrowthForecastSecurityGroup" }
                ],
                "KeyName" : { "Ref" : "KeyName" },
                "SubnetId" : { "Ref" : "ApiServerSubnet" },
                "Tags" : [
                    { "Key" : "ServerRole", "Value" : "Bastion" }
                ],
                "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                    "#!/bin/bash -xe\n",
                    "yum update -y\n",
                    "yum update -y aws-cfn-botstrap\n",

                    "yum groupinstall -y \"Development Tools\"\n",
                    "yum install -y pkgconfig glib2-devel gettext libxml2-devel pango-devel cairo-devel libyaml-devel\n",
                    "yum install -y *YAML*\n",
                    "yum install -y perl-ExtUtils-MakeMaker\n",
                    "curl -L https://cpanmin.us | perl - App::cpanminus\n",
                    "/usr/local/bin/cpanm -n Fatal\n",
                    "/usr/local/bin/cpanm -n GrowthForecast\n",

                    "yum localinstall -y ", { "Fn::FindInMap" : [ "ContentToURL", "epel", "URL" ]}, "\n",
                    "yum install -y ansible --enablerepo=epel\n",

                    "/opt/aws/bin/cfn-init ",
                    "    --stack ", { "Ref" : "AWS::StackId" },
                    "    --resource Bastion",
                    "    --region ", { "Ref" : "AWS::Region" }, "\n",

                    "/opt/aws/bin/cfn-signal -e $? ",
                    "    --stack ", { "Ref" : "AWS::StackId" },
                    "    --resource Bastion",
                    "    --region ", { "Ref" : "AWS::Region" }, "\n"
                ]]}}
            }
        }
    },
    "Outputs" : {
        "SSHToBastion" : {
            "Description" : "SSH command to connect the bastion server",
            "Value" : { "Fn::Join" : [ "", [
                "ssh",
                " -i ~/.ssh/", { "Ref" : "KeyName" }, ".pem",
                " ec2-user@", { "Fn::GetAtt" : [ "Bastion", "PublicIp" ]}
            ]]}
        },
        "GrowthForecast" : {
            "Description" : "-",
            "Value" : { "Fn::Join" : [ "", [
                "http://",
                { "Fn::GetAtt" : [ "Bastion", "PublicIp" ]},
                ":5125/"
            ]]}
        }
    }
}
